# Form implementation generated from reading ui file 'openauto/theme/theme.ui'
#
# Created by: PyQt6 UI code generator 6.9.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(327, 153)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.save_button = QtWidgets.QPushButton(parent=Form)
        self.save_button.setStyleSheet("QPushButton {\n"
"    background-color: #75937c;\n"
"    color: #fff;\n"
"    border-radius: 2px;\n"
"    font-size: 16px;\n"
"}\n"
"\n"
"QPushButton::hover {\n"
"    background-color: #759093;\n"
"    color: #050608;\n"
"    border-radius: 5px;\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/resources/icons3/24x24/cil-check-circle.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.save_button.setIcon(icon)
        self.save_button.setIconSize(QtCore.QSize(30, 30))
        self.save_button.setObjectName("save_button")
        self.gridLayout.addWidget(self.save_button, 1, 0, 1, 1)
        self.cancel_button = QtWidgets.QPushButton(parent=Form)
        self.cancel_button.setStyleSheet(" QPushButton { \n"
"    background-color: #C96567;\n"
"    color: #fff;\n"
"    border-radius: 2px;\n"
"    font-size: 16px;\n"
"}\n"
"\n"
"QPushButton::hover {\n"
"    background-color: #9E5A63;\n"
"    color: #050608;\n"
"    border-radius: 5px\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/resources/icons3/24x24/cil-x.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.cancel_button.setIcon(icon1)
        self.cancel_button.setIconSize(QtCore.QSize(30, 30))
        self.cancel_button.setObjectName("cancel_button")
        self.gridLayout.addWidget(self.cancel_button, 1, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.light_radiobutton = QtWidgets.QRadioButton(parent=Form)
        self.light_radiobutton.setStyleSheet("QRadioButton { \n"
"    background-color: #F5F7FA;\n"
"    font-size: 16px;\n"
"    color: #1E1E1E;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"                    width: 15px;\n"
"                    height: 15px;\n"
"                        border-radius: 7px;\n"
"                    border: 2px solid gray;\n"
"                    background-color: white;\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator:checked {\n"
"    background-color: red;\n"
"   border: 2px solid darkred;\n"
"}")
        self.light_radiobutton.setIconSize(QtCore.QSize(16, 16))
        self.light_radiobutton.setObjectName("light_radiobutton")
        self.horizontalLayout.addWidget(self.light_radiobutton)
        self.dark_radiobutton = QtWidgets.QRadioButton(parent=Form)
        self.dark_radiobutton.setStyleSheet("QRadioButton {\n"
"    background-color: #1E1E1E;\n"
"    color: #fff;\n"
"    font-size: 16px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"                    width: 15px;\n"
"                    height: 15px;\n"
"                    border-radius: 7px; /* Makes it circular */\n"
"                    border: 2px solid gray;\n"
"                    background-color: white;\n"
"}\n"
"\n"
"QRadioButton::indicator:checked {\n"
"    background-color: red;\n"
"   border: 2px solid darkred;\n"
"}")
        self.dark_radiobutton.setObjectName("dark_radiobutton")
        self.horizontalLayout.addWidget(self.dark_radiobutton)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 2)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.save_button.setText(_translate("Form", "Save"))
        self.cancel_button.setText(_translate("Form", "Cancel"))
        self.light_radiobutton.setText(_translate("Form", "Light Theme"))
        self.dark_radiobutton.setText(_translate("Form", "Dark Theme"))
from openauto.theme import resources_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
